name: Reusable python tests workflow
on:
  workflow_call:
    inputs:
      python_versions:
        description: Python versions to use
        type: string
        required: true
      working_directory:
        description: Directory that must be run against the linters
        type: string
        required: true
      requirements_path:
        description: Path to the requirements.txt file
        type: string
        required: true

      use_tox:
        description: Use tox suite
        default: false
        type: boolean
        required: false
      use_unittest:
        description: Use unittest suite
        default: false
        type: boolean
        required: false
      use_pytest:
        description: Use pytest suite
        default: false
        type: boolean
        required: false

jobs:
    tests:
        name: Run python tests
        runs-on: ubuntu-latest
        strategy:
          matrix:
            python_version: ${{ fromJson(inputs.python_versions) }}
        steps:
            - uses: actions/checkout@v3

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                python-version: ${{ matrix.python_version }}

            - name: Cache venv
              id: cache_venv
              uses: actions/cache@v3
              with:
                path: venv
                key: pip-${{ matrix.python_version }}-${{ hashFiles(inputs.requirements_path) }}

            - name: Install dependencies
              if: steps.cache_venv.outputs.cache-hit != 'true'
              run: |
                if [ -d "venv" ]; then rm -rf venv; fi
                python3 -m venv venv
                source venv/bin/activate
                pip install --upgrade pip
                pip install -r ${{ inputs.requirements_path }}

            - name: Run tox tests
              if: ${{ inputs.use_tox }}
              run: |
                tox
              working-directory: ${{ inputs.working_directory }}
            - name: Run unittest
              if: ${{ inputs.use_unittest }}
              run: |
                python -m unittest discover
              working-directory: ${{ inputs.working_directory }}
            - name: Run pytest
              if: ${{ inputs.use_pytest }}
              run: |
                  python -m pytest
              working-directory: ${{ inputs.working_directory }}

