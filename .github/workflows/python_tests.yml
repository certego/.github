name: Reusable python tests workflow
on:
  workflow_call:
    inputs:
      python_versions:
        description: Python versions to use
        type: string
        required: true
      working_directory:
        description: Directory that must be run against the linters
        type: string
        required: true
      requirements_path:
        description: Path to the requirements.txt file
        type: string
        required: true
      packages_path:
        description: Path to the packages.txt file
        type: string
        required: false


      custom_commands:
        description: Array of custom commands to run
        type: string
        required: false
      use_tox:
        description: Use tox suite
        default: false
        type: boolean
        required: false
      use_unittest:
        description: Use unittest suite
        default: false
        type: boolean
        required: false
      use_pytest:
        description: Use pytest suite
        default: false
        type: boolean
        required: false

jobs:
    tests:
        name: Run python tests
        runs-on: ubuntu-latest
        strategy:
          matrix:
            python_version: ${{ fromJson(inputs.python_versions) }}
        steps:
            - uses: actions/checkout@v3

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                python-version: ${{ matrix.python_version }}

            - uses: syphar/restore-virtualenv@v1
              id: cache-virtualenv
              with:
                requirement_files: ${{ inputs.requirements_path }}

            - uses: syphar/restore-pip-download-cache@v1
              if: steps.cache-virtualenv.outputs.cache-hit != 'true'

            - run: pip install -r ${{ inputs.requirements_path }}
              if: steps.cache-virtualenv.outputs.cache-hit != 'true'

            - name: Install apt packages
              if: ${{ inputs.packages_path }}
              run: |
                sudo apt update
                cat ${{ inputs.packages_path }} | sudo xargs apt-get install -y

            - name: Custom commands
              if: ${{ inputs.custom_commands }}
              run: |
                for command in ${{ inputs.custom_commands }}
                do
                  echo "Running command: $command"
                  $command
                done

            - name: Run tox tests
              if: ${{ inputs.use_tox }}
              run: |
                tox
              working-directory: ${{ inputs.working_directory }}
            - name: Run unittest
              if: ${{ inputs.use_unittest }}
              run: |
                python -m unittest discover
              working-directory: ${{ inputs.working_directory }}
            - name: Run pytest
              if: ${{ inputs.use_pytest }}
              run: |
                  python -m pytest
              working-directory: ${{ inputs.working_directory }}

