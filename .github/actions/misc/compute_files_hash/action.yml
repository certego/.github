name: Composite action compute files hash
description: Composite action to compute a single hash of one or more files
inputs:
  file_paths:
    description: Comma separeted list of files.
    required: false

outputs:
  computed_hash:
    description: The hash of the concatenated files
    value: ${{ steps.compute_files_sha256_hash.outputs.computed_hash }}

runs:
  using: "composite"
  steps:
    - name: Compute files SHA256 hash
      id: compute_files_sha256_hash
      run: |
        JOINED_FILES="cat "
        # Create a bash array of file paths
        IFS=',' read -r -a files <<< "${{ inputs.file_paths }}"
        echo "::debug::File paths array is composed by: ${files[@]}"
        for file in ${files[@]};
        do
          if [[ -f $file ]]; then
            # Concat file path to cat command
            JOINED_FILES+="$file "
            echo "::debug::Current file is $file"
            echo "::debug::JOINED_FILES variable state is $JOINED_FILES"
          else
            echo "::error::$file does not exist or it is not a regular file!"
            exit 1
          fi
        done
        COMPUTED_HASH=$($JOINED_FILES | sha256sum | cut -d ' ' -f 1)
        echo "::debug::Hash is $COMPUTED_HASH"
        echo "computed_hash=$COMPUTED_HASH" >> $GITHUB_OUTPUT
      shell: bash